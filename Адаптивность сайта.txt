
---------------------------------------- Введение ------------------------------------------------

 Стандартные практики по созданию адаптивных сайтов:

 1) гибкие элементы;
 2) использование возможностей Flex;
 3) использование media-запросов CSS;
 4) создание контрольных точек (breakpoint).

 Инстременты для проверки адаптивности:
 1) Mobile Friendly - сервисов проверки адаптивности страницы под мобильные устройства
                      Указывает на ошибки (маленький шрифт и тд)
 2) DevTools - извесно ctrl + shift + i
 3) Вебмастер Яндекс - проверяет адаптивность на разных устройствах.
 4) Lambda Test - проверить сайт на разных оперативных системах и браузеров.


 -------------------------------------- Viewport -------------------------------------------------

 viewport — видимая пользователю область страницы, которая доступна без прокрутки.
 viewport позволяет нам указать, какая область просмотра необходима для страницы.
   <meta name="viewport" content="width=700">

 device-width - установит ширину области равной разрешению экрана устройства, с которого 
                открыта страница.

 Масштабирование ----------

 initial-scale — указывает коэффициент масштабирования страницы. Значения используется 
                 число от 0.1 до 10

 initial-scale=2.0 - ближе x2.

 minimum-scale - устанавливают минимальный коэффициент масштабирования страницы.
 maximum-scale - устанавливают максимальный коэффициент масштабирования страницы.

 user-scalable - даёт возможность пользователю масштабировать страницу. (yes или no)


 В итоге в основном так: 
 <meta name="viewport" content="width=device-width, initial-scale=1.0">



-------------------------------------- Гибкие элементы -------------------------------------------

 Резиновая верстка:
 Делить элементы относительно вьюпорта, то есть 100%

 Минусы: 
  Если разрешение экрана будет очень мало? Потом текст внутри блоков уже не сможет помещаться 
  и выйдет за границы своего родителя.

 Решение:
 min-width - задать «точку остановки», после которой контейнер и элементы внутри него 
             перестанут сжиматься.
 (max-width - наоборот чтобы контент не растягивался более (достаточно 1200-1300px по ширине))



------------------------------------------ Flex --------------------------------------------------

 Основные свойства при создании адаптивного сайта.
  1) flex-wrap: wrap;
  2) flex-grow - отвечает за растягивание
  3) flex-shrink - сжимание
  4) flex-basis - ширину адаптивную.

 .container {
    display: flex;
    flex-wrap: wrap;
    max-width: 1000px;
  }
Карточки должны уметь растягиваться и сжиматься в зависимости от свободного пространства.
 .flex-item {
   flex: 1 1 333.3px;
   padding: 20px;
   box-sizing: border-box;
  }

  

-------------------------------------- Медиазапросы ----------------------------------------------

 Медиазапросы — специальные условные конструкции, которые позволяют применять стили только для 
                определённых устройств.

 @media (условия) {
  *CSS-код, который будет выполнен для данного условия*
 }


 Зачастую используются следующие условия в медиазапросах:

 1) orientation - ориентация экрана. со значениями:
     а) landscape - горизонтальная ориентация.
     б) portrait - вертикальная ориентация.  
 
    @media (orientation: landscape) {
      *При горизонтальной ориентации фоновым цветом сайта будет белый*    
      body {
       background: #FFF;
      }
    }

 2) width, min-width, max-width и height, min-height, max-height - разрешение экрана.
   
    С помощью таких условий создаются breakpoint — контрольные точки.



 Логические операторы - условия внутри медиазапросов можно комбинировать.

 1) «И» - @media (orientation: portrait) and (min-width: 600px)
 2) «ИЛИ» -  @media (orientation: portrait), (min-width: 600px) - применятся в том случае, если 
             хотя бы одно из условий будет выполнено.
 3) «НЕ» - @media not all and (orientation: landscape) - применятся в том случае, если условие 
                                                         не выполняется.

 Подход к адаптиву:
  1) Desktop First - сначала указываются стили для десктопа.
  2) Mobile First - сначала указываются стили для мобильных утройств.



------------------------------ Медиазапросы и другие устройства ----------------------------------

 4 основных типа устройств, которые возможно указать в качестве условия медиазапроса:
 
 1) print — принтеры. Эти стили используются при печати веб-страницы.
 2) screen — все экраны различных устройств. Сюда входят как дисплеи холодильников, так и 
             4К-мониторы.
 3) speech — скринридеры. Это программное обеспечение для чтения текста, помогающие незрячим 
             людям воспринимать информацию на странице.
  @media print {
    /* Стили для вывода страницы на печать */
  }
 


 CSS позволяет указывать и особые характеристики устройства, для которого необходимо 
 применить стили:
 
 1) color - количество бит цвета, которое способно воспроизвести устройство.
 2) monochrom - устройство является монохромным, если может воспроизводить только два основных 
                цвета — чёрный и белый (электронные книги.)
 3) aspect-ratio - характеристика, показывающая соотношение сторон viewport. 
                   Например 16/9, 1280/720 или 4/3.
  @media (aspect-ratio: 16/9) {
    /* Стили страницы с соотношением 16 к 9 */
  }













